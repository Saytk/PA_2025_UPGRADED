@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Section = "TechnicalAnalysis";
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Technical Analysis</title>
    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>

</head>
<body>
    <div class="dashboard-grid">

        <div class="">
            <h1>Technical Analysis</h1>

            <!-- 🔹 Section Candlestick -->
            <div class="card">
                <div style="margin-bottom: 20px;">
                    <label>
                        Symbol:
                        <select id="symbolSelect">
                            <option value="BTCUSDT">BTCUSDT</option>
                        </select>
                    </label>

                    <label>
                        Start Date:
                        <input type="datetime-local" id="startDate" value="2025-07-07T09:00" />
                    </label>

                    <label>
                        End Date:
                        <input type="datetime-local" id="endDate" value="2025-07-07T09:00" />
                    </label>

                    <button onclick="loadCandlestickData()">Load</button>
                </div>

                <h3>Candlestick Chart</h3>
                <div id="candlestick-chart" style="max-width: 1000px; margin: auto;"></div>
            </div>

            <!-- 🔹 Section Prédiction IA -->
            <div class="card">
                <h3>AI Predictions</h3>
                <div id="ai-prediction-chart" style="max-width: 1000px; margin: auto;"></div>
            </div>
        </div>
    </div>

    <script>
        let chart; // Pour candlestick

        async function loadCandlestickData() {
            const symbol = document.getElementById('symbolSelect').value;
            const start = document.getElementById('startDate').value;
            const end = document.getElementById('endDate').value;

            const url = `/api/candlestick/load?symbol=${symbol}&start_date=${start}&end_date=${end}`;

            try {
                const res = await fetch(url);
                const json = await res.json();

                const transformed = json.data.map(d => ({
                    x: new Date(d.timestamp_utc).toISOString(),
                    y: [d.open, d.high, d.low, d.close]
                }));

                const options = {
                    chart: { type: 'candlestick', height: 400 },
                    title: { text: `${symbol} Candlestick Chart`, align: 'left' },
                    xaxis: { type: 'datetime' },
                    yaxis: { tooltip: { enabled: true } },
                    plotOptions: {
                        candlestick: {
                            colors: {
                                upward: '#26a69a',
                                downward: '#ef5350'
                            }
                        }
                    },
                    series: [{ data: transformed }]
                };

                if (!chart) {
                    chart = new ApexCharts(document.querySelector("#candlestick-chart"), options);
                    chart.render();
                } else {
                    chart.updateOptions({ title: { text: `${symbol} Candlestick Chart` } });
                    chart.updateSeries([{ data: transformed }]);
                }

            } catch (error) {
                console.error('Error loading candlestick data:', error);
                alert("Failed to load candlestick data from API.");
            }
        }

        async function loadPredictions() {
            try {
                const res = await fetch("/api/candlestick/predict?symbol=BTCUSDT");
                const json = await res.json();

                const timestamps = json.predictions.map(p => p.timestamp_utc);
                const closes = json.predictions.map(p => p.close);
                const predictions = json.predictions.map(p => p.prediction);

                const options = {
                    chart: {
                        type: 'line',
                        height: 400,
                        zoom: { enabled: true }
                    },
                    title: {
                        text: 'BTCUSDT - Close Price & AI Prediction',
                        align: 'left'
                    },
                    xaxis: {
                        categories: timestamps,
                        type: 'datetime',
                        labels: {
                            rotate: -45,
                            format: 'HH:mm'
                        }
                    },
                    yaxis: [
                        {
                            title: { text: 'Price (USD)' }
                        },
                        {
                            opposite: true,
                            max: 1,
                            min: 0,
                            title: { text: 'Prediction Score' }
                        }
                    ],
                    tooltip: {
                        shared: true,
                        intersect: false
                    },
                    series: [
                        {
                            name: "Close Price",
                            data: closes,
                            type: 'line'
                        },
                        {
                            name: "AI Prediction (probability)",
                            data: predictions,
                            type: 'line',
                            yAxisIndex: 1,
                            stroke: { dashArray: 4 }
                        }
                    ]
                };

                const predictionChart = new ApexCharts(document.querySelector("#ai-prediction-chart"), options);
                predictionChart.render();

            } catch (error) {
                console.error("Erreur lors du chargement des prédictions :", error);
                alert("Impossible de charger les prédictions depuis l'API.");
            }
        }

        window.onload = () => {
            loadCandlestickData();
            loadPredictions();
        };
    </script>
</body>
</html>
