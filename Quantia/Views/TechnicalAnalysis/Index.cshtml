@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Section = "TechnicalAnalysis";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>Crypto Technical Analysis</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
    <style>
        .dashboard-heading {
            font-weight: 600;
            letter-spacing: -.02em
        }

        .advice-bullish {
            background: #d1f7d1
        }

        .advice-bearish {
            background: #f8d7da
        }

        .advice-neutral {
            background: #e2e3e5
        }
    </style>
</head>
<body>
    <div class="container-fluid py-4">
        <h1 class="dashboard-heading mb-4">Crypto Technical Analysis</h1>
        <form id="paramsForm" class="row gy-2 gx-3 align-items-center" onsubmit="event.preventDefault(); loadAll();">
            <div class="col-md-2"><label class="form-label mb-0">Symbol</label><select id="symbolSelect" class="form-select"><option value="BTCUSDT">Bitcoin</option><option value="ETHUSDT">Ethereum</option></select></div>
            <div class="col-md-2"><label class="form-label mb-0">Start</label><input type="datetime-local" id="startDate" class="form-control"></div>
            <div class="col-md-2"><label class="form-label mb-0">End</label><input type="datetime-local" id="endDate" class="form-control"></div>
            <div class="col-md-2"><label class="form-label mb-0">Pattern source</label><select id="patternMode" class="form-select"><option value="ml">ML (Sequences)</option><option value="classic">Classic (Candlestick)</option></select></div>
            <div class="col-md-2 d-flex align-items-end"><button class="btn btn-primary w-100" type="submit">Refresh</button></div>
        </form>

        <div id="pattern-summary" class="alert mt-4 advice-neutral">🔍 <em>Analysis pending…</em></div>
        <div class="row g-4">
            <div class="col-xl-8"><div class="card shadow-sm"><div class="card-header">Candlestick Chart</div><div class="card-body p-0"><div id="candlestick-chart" style="height:500px"></div></div></div></div>
            <div class="col-xl-4"><div class="card shadow-sm h-100"><div class="card-header d-flex justify-content-between align-items-center"><span>Decision Assistant</span><span id="loaderAdvice" class="spinner-border spinner-border-sm text-secondary d-none"></span></div><div id="decision-assistant" class="card-body"><p class="text-muted mb-0">Select a time window…</p></div></div></div>
        </div>

        <div class="card shadow-sm mt-4"><div class="card-header">Detected Patterns</div><div class="table-responsive"><table id="patterns-table" class="table table-sm table-striped mb-0"><thead class="table-light"><tr id="patterns-header"></tr></thead><tbody id="patterns-body"></tbody></table></div></div>
        <footer class="small text-muted mt-4">Information provided is not financial advice.</footer>
    </div>

    <script>
        /* ---------------- Pattern knowledge base (front only) -------------*/
        const PATTERN_INFO={
          CDLHAMMER:{name:"Hammer",def:"Small body near top, long lower shadow (≥2× body).",context:"After a decline / at support.",meaning:"Potential bullish reversal.",invalid:"Close below the Hammer low."},
          CDLENGULFING:{name:"Engulfing",def:"Second candle engulfs previous body.",context:"Trend exhaustion.",meaning:"Reversal: bullish (+) or bearish (–).",invalid:"No follow‑through within 2 bars."},
          CDLSHOOTINGSTAR:{name:"Shooting Star",def:"Small body near low, long upper shadow.",context:"After an upswing / resistance.",meaning:"Potential bearish reversal.",invalid:"Close above the pattern high."},
          CDLHANGINGMAN:{name:"Hanging Man",def:"Hammer‑shape after advance.",context:"Tops / extended rallies.",meaning:"Bearish warning – need confirmation.",invalid:"Strong close above pattern high."},
          CDLDOJI:{name:"Doji",def:"Open ≈ Close; shadows vary.",context:"Indecision after trend.",meaning:"Pause or reversal once range breaks.",invalid:"Continuation breakout."},
          CDLMORNINGSTAR:{name:"Morning Star",def:"Bearish candle, small pause, bullish candle closes ≥50 % of 1st.",context:"Downtrends / oversold.",meaning:"Reliable bullish reversal.",invalid:"Close below pattern low."},
          CDLEVENINGSTAR:{name:"Evening Star",def:"Bullish candle, small pause, bearish candle closes ≤50 % of 1st.",context:"Uptrends / overbought.",meaning:"Reliable bearish reversal.",invalid:"Close above pattern high."},
          CDLPIERCING:{name:"Piercing Line",def:"Bullish candle opens below low then closes >50 % into previous body.",context:"After decline.",meaning:"Near‑term upside reversal.",invalid:"Close below bullish candle low."},
          CDLDARKCLOUDCOVER:{name:"Dark Cloud Cover",def:"Bearish candle opens above high then closes <50 % into previous body.",context:"After rise.",meaning:"Potential downside reversal.",invalid:"Close above bearish candle high."}
        };

        /* ------------------- Helpers & state -----------------------------*/
        const qs=s=>document.querySelector(s);const show=s=>qs(s).classList.remove('d-none');const hide=s=>qs(s).classList.add('d-none');let chart,annotations=[];
        const parseUTC=i=>new Date(/Z|[+-]\d{2}:?\d{2}$/.test(i)?i:i+'Z');
        const localInputValue=d=>{const p=v=>String(v).padStart(2,'0');return `${d.getFullYear()}-${p(d.getMonth()+1)}-${p(d.getDate())}T${p(d.getHours())}:${p(d.getMinutes())}`};

        /* ------------------- Candles -----------------------------*/
        async function loadCandlestickData(){const s=qs('#symbolSelect').value,st=qs('#startDate').value,ed=qs('#endDate').value;const url=`/api/candlestick/load?symbol=${s}&start_date=${st}&end_date=${ed}`;try{const r=await fetch(url);const j=await r.json();const data=j.data.map(d=>({x:parseUTC(d.timestamp_utc).getTime(),y:[d.open,d.high,d.low,d.close]}));const opt={chart:{type:'candlestick',height:500,animations:{enabled:false}},xaxis:{type:'datetime',labels:{datetimeUTC:false}},series:[{data}],annotations:{xaxis:annotations}};if(!chart){chart=new ApexCharts(qs('#candlestick-chart'),opt);chart.render();}else{chart.updateSeries([{data}]);chart.updateOptions({annotations:{xaxis:annotations}});} }catch(e){console.error(e);}}

        /* ------------------- Advice helpers ---------------------*/
        function actionAdvice(dir){if(dir==='bullish')return 'Consider long entries or scaling out of shorts.';if(dir==='bearish')return 'Consider taking profit or shorting; tighten long stops.';return 'Wait for confirmation.';}

        /* ------------------- Patterns loader --------------------*/
        function buildHeaders(m){qs('#patterns-header').innerHTML=m==='classic'?'<th>Time</th><th>Pattern</th><th>Dir.</th><th>Definition</th>':'<th>Start</th><th>End</th><th>Sequence</th><th>Dir.</th><th>Bias</th><th>Bull</th><th>Bear</th><th>Neutral</th>';}

        async function loadPatterns(){const mode=qs('#patternMode').value,s=qs('#symbolSelect').value,st=qs('#startDate').value,ed=qs('#endDate').value;const endpoint=mode==='classic'?`/api/candlestick/patterns/classic?symbol=${s}&start_date=${st}&end_date=${ed}`:`/api/candlestick/patterns?symbol=${s}&start_date=${st}&end_date=${ed}`;buildHeaders(mode);
         try{show('#loaderAdvice');const r=await fetch(endpoint);const j=await r.json();const rows=j.patterns_detected||[];const tbody=qs('#patterns-body');tbody.innerHTML='';annotations=[];
         if(mode==='classic'){rows.forEach(p=>{const meta=PATTERN_INFO[p.pattern_code]||{};const tr=document.createElement('tr');tr.innerHTML=`<td>${p.timestamp.slice(11,16)}</td><td>${meta.name||p.pattern_code}</td><td>${p.direction}</td><td>${meta.def||''}</td>`;tbody.appendChild(tr);annotations.push({x:parseUTC(p.timestamp).getTime(),borderColor:p.direction==='bullish'?'#a5d6a7':'#ef9a9a',label:{style:{background:'#fff'},text:p.direction==='bullish'?'📈':'📉'}});});}
         else{rows.forEach(p=>{const tr=document.createElement('tr');tr.innerHTML=`<td>${p.start_timestamp.slice(11,16)}</td><td>${p.end_timestamp.slice(11,16)}</td><td><code>${p.sequence.join(', ')}</code></td><td>${p.direction}</td><td>${p.bias.toFixed(3)}</td><td>${(p.bullish_ratio*100).toFixed(1)}</td><td>${(p.bearish_ratio*100).toFixed(1)}</td><td>${(p.neutral_ratio*100).toFixed(1)}</td>`;tbody.appendChild(tr);annotations.push({x:parseUTC(p.end_timestamp).getTime(),borderColor:p.direction==='bullish'?'#a5d6a7':'#ef9a9a',label:{style:{background:'#fff'},text:p.direction==='bullish'?'📈':'📉'}});});}
         /* banner */
         const banner=qs('#pattern-summary');if(rows.length){const t=rows[0];const dir=t.direction||'neutral';banner.className=`alert mt-4 advice-${dir}`;if(mode==='classic'){const meta=PATTERN_INFO[t.pattern_code]||{};banner.innerHTML=`${dir==='bullish'?'📈':'📉'} ${meta.name||t.pattern_code} detected at ${t.timestamp.slice(11,16)} — ${meta.meaning||''}`;}else{banner.innerHTML=`${dir==='bullish'?'📈':'📉'} Last ML pattern bias <strong>${t.bias.toFixed(2)}</strong>`;}}else{banner.className='alert mt-4 advice-neutral';banner.textContent='No pattern detected.';}
         /* assistant */
         const box=qs('#decision-assistant');if(rows.length){const t=rows[0];const dir=t.direction||'neutral';const emoji=dir==='bullish'?'📈':dir==='bearish'?'📉':'⏸️';let content='';if(mode==='classic'){const meta=PATTERN_INFO[t.pattern_code]||{};content=`${meta.name||t.pattern_code} (${dir})<br>${meta.def||''}<br><em>${meta.meaning||''}</em><br><small>Invalidation: ${meta.invalid||'—'}</small>`;}else{content=`Bias: ${t.bias.toFixed(2)}<br>Seq: <code>${t.sequence.join(', ')}</code>`;}box.innerHTML=`<p>${emoji} <strong>${dir==='bullish'?'Bullish':'Bearish'} signal</strong></p><p>${content}</p><p><em>${actionAdvice(dir)}</em></p>`;}else{box.innerHTML='<p class="text-muted">No actionable signal…</p>';}
         loadCandlestickData();}finally{hide('#loaderAdvice');}}

        function loadAll(){loadPatterns();}
        window.addEventListener('load',()=>{const n=new Date();qs('#endDate').value=localInputValue(n);qs('#startDate').value=localInputValue(new Date(n.getTime()-60*60*1000));loadAll();});
    </script>
</body>
</html>
