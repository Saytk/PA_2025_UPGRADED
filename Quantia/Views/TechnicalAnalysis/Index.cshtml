@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Section = "TechnicalAnalysis";
}

<!-- =========================================================
     Technical Analysis / Crypto Decision‑Support Dashboard
     ========================================================= -->
<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="utf-8" />
    <title>Analyse Technique Crypto</title>

    <!-- ✓ UI : Bootstrap 5 -------------------------------------------------->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <!-- ✓ Charting : ApexCharts --------------------------------------------->
    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>

    <style>
        /* --------- Styles légers ------------------------------------------*/
        .dashboard-heading {
            font-weight: 600;
            letter-spacing: -.02em
        }

        .advice-bullish {
            background: #d1f7d1
        }

        .advice-bearish {
            background: #f8d7da
        }

        .advice-neutral {
            background: #e2e3e5
        }
    </style>
</head>
<body>
    <div class="container-fluid py-4">
        <h1 class="dashboard-heading mb-4">Analyse Technique <small class="text-muted">crypto‑monnaies</small></h1>

        <!-- ██████ Formulaire paramètres ██████ -->
        <form id="paramsForm" class="row gy-2 gx-3 align-items-center" onsubmit="event.preventDefault(); loadAll();">
            <div class="col-md-3">
                <label class="form-label mb-0">Symbole</label>
                <select class="form-select" id="symbolSelect">
                    <option value="BTCUSDT">Bitcoin (BTC)</option>
                    <option value="ETHUSDT">Ethereum (ETH)</option>
                </select>
            </div>
            <div class="col-md-3">
                <label class="form-label mb-0">Début</label>
                <input type="datetime-local" class="form-control" id="startDate" />
            </div>
            <div class="col-md-3">
                <label class="form-label mb-0">Fin</label>
                <input type="datetime-local" class="form-control" id="endDate" />
            </div>
            <div class="col-md-2 d-flex align-items-end">
                <button class="btn btn-primary w-100" type="submit">Actualiser</button>
            </div>
        </form>

        <!-- ██████ Résumé + Conseils rapides ██████ -->
        <div id="pattern-summary" class="alert mt-4 advice-neutral" role="alert">
            🔍 <em>Analyse en attente…</em>
        </div>

        <!-- ██████ Chart + aide à la décision ██████ -->
        <div class="row g-4">
            <!-- ▶ Graphe chandeliers -->
            <div class="col-xl-8">
                <div class="card shadow-sm">
                    <div class="card-header">Graphique Chandeliers</div>
                    <div class="card-body p-0">
                        <div id="candlestick-chart" style="height:500px;"></div>
                    </div>
                </div>
            </div>

            <!-- ▶ Aide à la décision -->
            <div class="col-xl-4">
                <div class="card shadow-sm h-100">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <span>Aide à la décision</span>
                        <span id="loaderAdvice" class="spinner-border spinner-border-sm text-secondary d-none"></span>
                    </div>
                    <div class="card-body" id="decision-assistant">
                        <p class="text-muted mb-0">Sélectionnez une période pour obtenir des signaux…</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- ██████ Tableau des patterns ██████ -->
        <div class="card shadow-sm mt-4">
            <div class="card-header">Patterns détectés</div>
            <div class="table-responsive">
                <table class="table table-sm table-striped mb-0" id="patterns-table">
                    <thead class="table-light">
                        <tr>
                            <th>Début</th>
                            <th>Fin</th>
                            <th>Séquence</th>
                            <th>Dir.</th>
                            <th>Biais</th>
                            <th>Bullish</th>
                            <th>Bearish</th>
                            <th>Neutre</th>
                        </tr>
                    </thead>
                    <tbody id="patterns-body"></tbody>
                </table>
            </div>
        </div>

        <footer class="small text-muted mt-4">
            Les informations fournies ne constituent pas un conseil financier. Faites toujours vos propres recherches.
        </footer>
    </div>

    <!-- ██████ JavaScript ██████ -->
    <script>
        /*********************************************************************
         * Helpers & state
         *********************************************************************/
        const qs   = sel => document.querySelector(sel);
        const qsi  = (sel, html) => (qs(sel).innerHTML = html);
        const show = sel => qs(sel).classList.remove('d-none');
        const hide = sel => qs(sel).classList.add('d-none');

        let chart;        // ApexCharts instance
        let annotations = [];

        // → Convert ISO (UTC ou local) vers Date UTC (corrige affichage +2h)
        function parseUTC(iso){
            if(!iso) return new Date();
            // Ajoute le suffixe Z si aucun offset n'est présent
            return new Date(/Z|([+-]\d{2}:?\d{2})$/.test(iso) ? iso : iso + 'Z');
        }

        // → Format YYYY‑MM‑DDTHH:MM avec fuseau LOCAL (UTC+2 par ex.)
        function localInputValue(date){
            const pad = v => String(v).padStart(2,'0');
            return `${date.getFullYear()}-${pad(date.getMonth()+1)}-${pad(date.getDate())}T${pad(date.getHours())}:${pad(date.getMinutes())}`;
        }

        /*********************************************************************
         * Chargement des chandeliers
         *********************************************************************/
        async function loadCandlestickData(){
            const symbol = qs('#symbolSelect').value;
            const start  = qs('#startDate').value;
            const end    = qs('#endDate').value;
            const url    = `/api/candlestick/load?symbol=${symbol}&start_date=${start}&end_date=${end}`;

            try{
                const res  = await fetch(url);
                const json = await res.json();
                const data = json.data.map(d => ({
                    x: parseUTC(d.timestamp_utc).getTime(),
                    y: [d.open, d.high, d.low, d.close]
                }));

                const options = {
                    chart:{type:'candlestick',height:500,animations:{enabled:false}},
                    xaxis:{type:'datetime', labels:{ datetimeUTC:false }},
                    yaxis:{tooltip:{enabled:true}},
                    series:[{data}],
                    annotations:{xaxis:annotations}
                };

                if(!chart){
                    chart = new ApexCharts(qs('#candlestick-chart'), options);
                    chart.render();
                }else{
                    chart.updateSeries([{data}]);
                    chart.updateOptions({annotations:{xaxis:annotations}});
                }
            }catch(e){
                console.error(e);
                alert('Erreur lors du chargement des bougies');
            }
        }

        /*********************************************************************
         * Interprétation de pattern
         *********************************************************************/
        function interpretPattern(p){
            const absBias = Math.abs(p.bias);
            if(p.direction==='bullish'){
                if(absBias>0.25) return 'Signal haussier fort : potentiel retournement ou poursuite vigoureuse.';
                else return 'Signal haussier modéré : hausse probable, mais surveillez le volume.';
            }
            if(p.direction==='bearish'){
                if(absBias>0.25) return 'Signal baissier puissant : risque de repli marqué.';
                else return 'Signal baissier modéré : prudence, possibilité de correction.';
            }
            return 'Pattern neutre : aucune orientation claire, attendre confirmation.';
        }

        /*********************************************************************
         * Chargement des patterns & conseils
         *********************************************************************/
        async function loadPatterns(){
            const symbol = qs('#symbolSelect').value;
            const start  = qs('#startDate').value;
            const end    = qs('#endDate').value;
            const url    = `/api/candlestick/patterns?symbol=${symbol}&start_date=${start}&end_date=${end}`;

            try{
                show('#loaderAdvice');
                const res  = await fetch(url);
                const json = await res.json();

                /* Table */
                const tbody = qs('#patterns-body');
                tbody.innerHTML = '';
                json.patterns_detected.forEach(p=>{
                    const tr=document.createElement('tr');
                    tr.innerHTML=`
                        <td>${p.start_timestamp.slice(11,16)}</td>
                        <td>${p.end_timestamp.slice(11,16)}</td>
                        <td><code>${p.sequence.join(', ')}</code></td>
                        <td>${p.direction}</td>
                        <td>${p.bias.toFixed(3)}</td>
                        <td>${(p.bullish_ratio*100).toFixed(1)}%</td>
                        <td>${(p.bearish_ratio*100).toFixed(1)}%</td>
                        <td>${(p.neutral_ratio*100).toFixed(1)}%</td>`;
                    tbody.appendChild(tr);
                });

                /* Annotations */
                annotations = json.patterns_detected.map(p=>({
                    x: parseUTC(p.end_timestamp).getTime(),
                    borderColor:p.direction==='bullish'?'#a5d6a7':'#ef9a9a',
                    label:{
                        style:{color:'#000',background:'#fff'},
                        text:p.direction==='bullish'?'📈':'📉'
                    }
                }));

                /* Bannière résumé */
                const summary = qs('#pattern-summary');
                if(json.patterns_detected.length){
                    const top=json.patterns_detected[0];
                    summary.className=`alert mt-4 advice-${top.direction}`;
                    summary.innerHTML=`${top.direction==='bullish'?'📈':'📉'} Dernier pattern : <code>${top.sequence.join(', ')}</code> — Biais : <strong>${top.bias.toFixed(2)}</strong> — ${top.start_timestamp.slice(11,16)}→${top.end_timestamp.slice(11,16)}`;
                }else{
                    summary.className='alert mt-4 advice-neutral';
                    summary.innerHTML='Aucun pattern détecté pour cette période.';
                }

                /* Aide à la décision */
                const box=qs('#decision-assistant');
                if(json.patterns_detected.length){
                    const t=json.patterns_detected[0];
                    box.innerHTML=`
                        <p>${t.direction==='bullish'?'📈':'📉'} <strong>${t.direction==='bullish'?'Signal haussier':'Signal baissier'}</strong></p>
                        <p class="mb-1">${interpretPattern(t)}</p>
                        <p class="mb-1">Confiance : ${(t.bullish_ratio*100).toFixed(0)} % — Biais : ${t.bias.toFixed(2)}</p>
                        <small class="text-muted">Valide de ${t.start_timestamp.slice(11,16)} à ${t.end_timestamp.slice(11,16)}</small>`;
                }else{
                    box.innerHTML='<p class="text-muted">Pas de signal exploitable…</p>';
                }

                loadCandlestickData(); // maj graphique avec nouvelles annotations
            }catch(e){
                console.error(e);
            }finally{
                hide('#loaderAdvice');
            }
        }

        /*********************************************************************
         * Wrapper loadAll (patterns -> chandeliers)
         *********************************************************************/
        function loadAll(){
            loadPatterns();
        }

        /*********************************************************************
         * Initialisation : propose la dernière heure en LOCAL
         *********************************************************************/
        window.addEventListener('load',()=>{
            const now=new Date();
            qs('#endDate').value=localInputValue(now);
            qs('#startDate').value=localInputValue(new Date(now.getTime()-60*60*1000));
            loadAll();
        });
    </script>
</body>
</html>
