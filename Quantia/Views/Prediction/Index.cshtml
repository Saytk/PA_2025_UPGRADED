@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>Crypto Forecast — Prediction Dashboard</title>
    <link  href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
    <style>
        /* styles identiques à la version précédente */
        body{margin:0;font-family:'Segoe UI',sans-serif;background:#f9fafb;}
        .main{padding:40px;flex-grow:1;}
        .card{background:#fff;padding:20px;border-radius:10px;box-shadow:0 2px 5px rgba(0,0,0,.05);}
        .prediction-high{background:rgba(0,255,0,.2);}
        .prediction-medium{background:rgba(255,255,0,.2);}
        .prediction-low{background:rgba(255,0,0,.2);}
    </style>
</head>
<body>
    <div style="display:flex;">
        @Html.Partial("~/Views/Shared/_Sidebar.cshtml")
        <div class="main container-fluid">
            <nav class="navbar navbar-light bg-light mb-4 rounded">
                <a class="navbar-brand" href="/Prediction">Crypto Forecasting</a>
                <ul class="nav">
                    <li class="nav-item"><a class="nav-link active" href="/Prediction">Prediction Dashboard</a></li>
                    <li class="nav-item"><a class="nav-link" href="/Prediction/Pipeline">ML Pipeline</a></li>
                </ul>
            </nav>

            <h1 class="mb-4">Cryptocurrency Price Prediction Visualization</h1>

            <form id="config-form" class="row g-3 mb-4">
                <div class="col-md-5">
                    <label class="form-label">API URL</label>
                    <input id="api-url" class="form-control" value="http://localhost:8009/predict-latest" />
                </div>
                <div class="col-md-2">
                    <label class="form-label">Symbol</label>
                    <input id="symbol" class="form-control" value="BTCUSDT" />
                </div>
                <div class="col-md-2 d-flex align-items-end">
                    <button class="btn btn-primary w-100">Fetch Predictions</button>
                </div>
            </form>

            <div id="sample-data-alert" class="alert alert-warning" style="display:none;">
                Ceci est un jeu de données d’exemple…
            </div>

            <div class="card mb-4">
                <div class="card-header bg-primary text-white"><b id="chart-title">Price & Confidence</b></div>
                <div class="card-body"><div id="price-chart" style="height:500px;"></div></div>
            </div>

            <div class="card">
                <div class="card-header bg-primary text-white"><b>Prediction Details</b></div>
                <div class="card-body">
                    <table id="prediction-table" class="table table-striped table-hover">
                        <thead><tr><th>Time</th><th>Price</th><th>Up Probability</th><th>Strategy</th></tr></thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <script>
        /* ----------------- Endpoints MVC ----------------- */
        const endpointPredict = '/Prediction/GetPredictions';
        const endpointRefresh = '/Prediction/RefreshModel';

        document.addEventListener('DOMContentLoaded', ()=>{
            fetchPredictions();
            document.getElementById('config-form').addEventListener('submit',e=>{
                e.preventDefault(); fetchPredictions();
            });
        });

        function getStrategy(p){if(p>.75)return{a:'Strong Buy',c:'success'};
            if(p>=.6)return{a:'Buy',c:'info'};
            if(p>=.4)return{a:'Hold',c:'warning'};
            if(p>=.25)return{a:'Sell',c:'secondary'};
            return{a:'Strong Sell',c:'danger'};}

        function fetchPredictions(){
            const apiUrl=document.getElementById('api-url').value.trim();
            const symbol=document.getElementById('symbol').value.trim();
            fetch(endpointPredict,{
                method:'POST',
                headers:{'Content-Type':'application/json'},
                body:JSON.stringify({apiUrl,symbol})
            })
            .then(r=>r.json()).then(displayPredictions)
            .catch(err=>alert('Fetch error: '+err));
        }

        /* --- displayPredictions identique à la version précédente --- */
        function displayPredictions(data){
            document.getElementById('sample-data-alert').style.display=data.is_sample?'block':'none';
            document.getElementById('chart-title').textContent = `${data.symbol} Price with Prediction Confidence`;

            const t=data.predictions.map(p=>new Date(p.timestamp_utc));
            const y=data.predictions.map(p=>p.close);
            const p=data.predictions.map(p=>p.prediction);
            const colors=p.map(v=>`rgba(${Math.round(255*(1-v))},${Math.round(255*v)},0,.8)`);

            Plotly.newPlot('price-chart',[
                {x:t,y:y,mode:'lines',name:'Price',line:{width:2}},
                {x:t,y:y,mode:'markers',name:'Confidence',
                 marker:{size:12,color:colors,line:{width:1,color:'black'}},
                 text:p.map(v=>v.toFixed(3)),
                 hovertemplate:'%{x}<br>%{y:$,.2f}<br>pUp=%{text}<extra></extra>'}],
                {margin:{t:30},xaxis:{title:'Time'},yaxis:{title:'Price (USDT)'}});

            const tbody=document.querySelector('#prediction-table tbody');
            tbody.innerHTML='';
            data.predictions.forEach(pr=>{
                const s=getStrategy(pr.prediction);
                const tr=document.createElement('tr');
                if(pr.prediction>.75)tr.classList.add('prediction-high');
                else if(pr.prediction<.25)tr.classList.add('prediction-low');
                else tr.classList.add('prediction-medium');

                tr.innerHTML=`<td>${new Date(pr.timestamp_utc).toLocaleTimeString()}</td>
                               <td>${pr.close.toLocaleString('en-US',{style:'currency',currency:'USD'})}</td>
                               <td>${(pr.prediction*100).toFixed(2)} %</td>
                               <td><span class="badge bg-${s.c}">${s.a}</span></td>`;
                tbody.appendChild(tr);
            });
        }
    </script>
</body>
</html>
