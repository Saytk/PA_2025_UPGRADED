@model Quantia.Models.ViewModels.TradePredictionVM
@using Newtonsoft.Json
@{
    ViewBag.Section = "Trade Prediction";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/chart.js@4"></script>

<h1 class="text-2xl font-semibold mb-6">Trade Prediction – BTC/USDT</h1>

<!-- Stat cards -->
<div class="grid grid-cols-4 gap-4 mb-8">
    <div class="p-4 bg-white rounded shadow">
        <p class="text-sm text-gray-500">Balance</p>
        <p class="text-xl font-bold">@($"{Model.Balance:F2}") USDT</p>
    </div>
    <div class="p-4 bg-white rounded shadow">
        <p class="text-sm text-gray-500">PNL latent</p>
        <p class="text-xl font-bold">@($"{Model.UnrealizedPnl:F2}") USDT</p>
    </div>
    <div class="p-4 bg-white rounded shadow">
        <p class="text-sm text-gray-500">Win Rate</p>
        <p class="text-xl font-bold">@($"{Model.WinRate:P1}")</p>
    </div>
    <div class="p-4 bg-white rounded shadow">
        <p class="text-sm text-gray-500">Profit Factor</p>
        <p class="text-xl font-bold">@($"{Model.ProfitFactor:F2}")</p>
    </div>
</div>

<!-- Equity curve -->
<div class="bg-white rounded shadow p-4 mb-8">
    <h2 class="text-lg font-semibold mb-4">Équity 30 j</h2>
    <canvas id="equityChart" height="90"></canvas>
</div>

<!-- Signals -->
<div class="bg-white rounded shadow p-4">
    <h2 class="text-lg font-semibold mb-4">Signaux actifs</h2>
    <table class="min-w-full text-sm">
        <thead>
            <tr class="border-b">
                <th class="py-2">Heure</th>
                <th class="py-2">Side</th>
                <th class="py-2">Proba</th>
                <th class="py-2">Entry</th>
                <th class="py-2">SL</th>
                <th class="py-2">TP</th>
                <th class="py-2">R:R</th>
                <th class="py-2"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var s in Model.Signals)
            {
                <tr class="border-b hover:bg-gray-50">
                    <td class="py-2">@s.Timestamp.ToString("HH:mm")</td>
                    <td class="py-2 font-medium @(s.Side == "BUY" ? "text-green-600" : "text-red-600")">@s.Side</td>
                    <td class="py-2">@($"{s.Probability:P1}")</td>
                    <td class="py-2">@s.Entry</td>
                    <td class="py-2">@s.StopLoss</td>
                    <td class="py-2">@s.TakeProfit</td>
                    <td class="py-2">@s.RiskReward</td>
                    <td class="py-2">
                        <button class="px-3 py-1 text-xs text-white bg-indigo-600 rounded"
                                onclick="execOrder('@s.Symbol', @s.Entry, @s.StopLoss, @s.TakeProfit)">
                            Passer
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Chart.js -->
<script>
    new Chart(document.getElementById('equityChart'), {
        type: 'line',
        data: {
            labels: @Html.Raw(JsonConvert.SerializeObject(
         Model.EquityDates.ConvertAll(d => d.ToString("dd MMM"))
            )),
            datasets: [{
                data: @Html.Raw(JsonConvert.SerializeObject(Model.EquityValues)),
                fill: false,
                tension: .3
            }]
        },
        options: {
            plugins: {
                legend: {
                    display: false
                }
            }
        }
    });

    // POST JSON vers /Portfolio/Add
    function execOrder(sym, entry, sl, tp) {
        const qty = prompt("Quantity ?", "0.001");
        if (!qty) return;

        fetch('/Portfolio/Add', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                cryptoSymbol: sym,
                amount: parseFloat(qty),
                priceAtPurchase: entry
            })
        }).then(r => {
            if (r.ok) location.reload();
            else alert('Erreur enregistrement trade');
        });
    }
</script>
